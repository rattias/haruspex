// automatically generated by the FlatBuffers compiler, do not modify

package haruspex.common.event.flatbuf;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

@SuppressWarnings("unused")
public final class TraceEvent extends Table {
  public static TraceEvent getRootAsTraceEvent(ByteBuffer _bb) { return getRootAsTraceEvent(_bb, new TraceEvent()); }
  public static TraceEvent getRootAsTraceEvent(ByteBuffer _bb, TraceEvent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public TraceEvent __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long seqNum() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public long timestamp() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public long traceId() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public long entityId() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public int blockId() { int o = __offset(12); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public TagContext tags(int j) { return tags(new TagContext(), j); }
  public TagContext tags(TagContext obj, int j) { int o = __offset(14); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int tagsLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }

  public static int createTraceEvent(FlatBufferBuilder builder,
      long seqNum,
      long timestamp,
      long traceId,
      long entityId,
      int blockId,
      int tagsOffset) {
    builder.startObject(6);
    TraceEvent.addEntityId(builder, entityId);
    TraceEvent.addTraceId(builder, traceId);
    TraceEvent.addTimestamp(builder, timestamp);
    TraceEvent.addSeqNum(builder, seqNum);
    TraceEvent.addTags(builder, tagsOffset);
    TraceEvent.addBlockId(builder, blockId);
    return TraceEvent.endTraceEvent(builder);
  }

  public static void startTraceEvent(FlatBufferBuilder builder) { builder.startObject(6); }
  public static void addSeqNum(FlatBufferBuilder builder, long seqNum) { builder.addLong(0, seqNum, 0); }
  public static void addTimestamp(FlatBufferBuilder builder, long timestamp) { builder.addLong(1, timestamp, 0); }
  public static void addTraceId(FlatBufferBuilder builder, long traceId) { builder.addLong(2, traceId, 0); }
  public static void addEntityId(FlatBufferBuilder builder, long entityId) { builder.addLong(3, entityId, 0); }
  public static void addBlockId(FlatBufferBuilder builder, int blockId) { builder.addInt(4, blockId, 0); }
  public static void addTags(FlatBufferBuilder builder, int tagsOffset) { builder.addOffset(5, tagsOffset, 0); }
  public static int createTagsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTagsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endTraceEvent(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

